{"version":3,"sources":["components/ContactList/ContactList.module.css","App.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","components/ContactForm/ContactForm.module.css","components/Container/Container.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["module","exports","Container","children","className","s","container","ContactForm","state","name","number","idName","shortid","generate","idNumber","inputValue","e","currentTarget","value","setState","addContact","preventDefault","props","contactList","alert","onSubmit","id","reset","form","this","htmlFor","title","input","onChange","type","placeholder","pattern","required","button","Component","Filter","SearchContact","Contactlist","onDelete","list","map","item","btnDelete","onClick","App","contacts","filter","contact","valuesFilter","getFilter","filterValues","toLowerCase","includes","checkName","newName","some","Object","values","join","deleteContact","contactId","prevState","localStorage","setItem","JSON","stringify","getStorageContacts","getItem","parseStorageContacts","parse","filterContact","ContactList","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7721c01b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1mxDy\",\"item\":\"ContactList_item__2GV8G\",\"btnDelete\":\"ContactList_btnDelete__3I5YN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__3tSZA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Filter_title__1b7kH\",\"input\":\"Filter_input__2TnrL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3Io9P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactForm_button__Zwutd\",\"form\":\"ContactForm_form__2QcIY\",\"title\":\"ContactForm_title__39bS9\",\"input\":\"ContactForm_input__1DuS7\"};","import React from \"react\";\r\nimport s from \"./Container.module.css\";\r\n\r\nconst Container = ({ children }) => {\r\nreturn (\r\n    <div className={s.container}>\r\n        {children}\r\n    </div>\r\n);\r\n}\r\n\r\nexport default Container;","import React, { Component } from \"react\";\r\nimport shortid from \"shortid\";\r\nimport s from \"./ContactForm.module.css\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  idName = shortid.generate();\r\n  idNumber = shortid.generate();\r\n\r\n  inputValue = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  addContact = (e) => {\r\n    e.preventDefault();\r\n\r\n    const checkName = this.props.contactList({ name: this.state.name });\r\n    if (checkName) {\r\n      alert(`${this.state.name} is already in contacts`);\r\n\r\n      return;\r\n    }\r\n\r\n    this.props.onSubmit({\r\n      id: shortid.generate(),\r\n      name: this.state.name,\r\n      number: this.state.number,\r\n    });\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={s.form} onSubmit={this.addContact}>\r\n        <label htmlFor={this.idName}>\r\n          <p className={s.title}>Name</p>\r\n          <input\r\n          className={s.input}\r\n            id={this.idName}\r\n            value={this.state.name}\r\n            onChange={this.inputValue}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            placeholder=\"Enter name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <label htmlFor={this.idNumber}>\r\n          <p className={s.title}>Number</p>\r\n          <input\r\n            className={s.input}\r\n            id={this.idNumber}\r\n            value={this.state.number}\r\n            onChange={this.inputValue}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            placeholder=\"Enter number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n        <button className={s.button} type=\"submite\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\r\nimport shortid from \"shortid\";\r\nimport s from './Filter.module.css';\r\n\r\nconst id = shortid.generate();\r\n\r\nconst Filter = ({value, SearchContact }) => {\r\n  return (\r\n    <label htmlFor={id}>\r\n          <p className={s.title}>Find contact by name</p>\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={value}\r\n        onChange={SearchContact}\r\n        id={id}\r\n       \r\n      ></input>\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Filter;","import React from 'react';\r\n\r\nimport s from './ContactList.module.css';\r\n\r\nconst Contactlist = ({contactList, onDelete}) => {\r\n    return (\r\n     <ul className={s.list}>\r\n      {contactList.map(({ id, name, number }) => {\r\n        return (\r\n          <li className={s.item} key={id}>\r\n            {name}: {number}\r\n            <button\r\n              className={s.btnDelete}\r\n              type=\"button\"\r\n              onClick={() => onDelete(id)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n)\r\n}\r\n\r\nexport default Contactlist;","import React, { Component } from \"react\";\r\nimport s from \"./App.module.css\";\r\n\r\nimport Container from \"./components/Container\";\r\nimport ContactForm from \"./components/ContactForm\";\r\nimport Filter from \"./components/Filter\";\r\nimport ContactList from \"./components/ContactList\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n    ],\r\n    filter: \"\",\r\n  };\r\n  componentDidUpdate(prevState) {\r\n    if (this.state.contacts !== prevState.contacts) {\r\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    const getStorageContacts = localStorage.getItem(\"contacts\");\r\n    const parseStorageContacts = JSON.parse(getStorageContacts);\r\n    if (getStorageContacts) {\r\n      this.setState({ contacts: parseStorageContacts });\r\n    }\r\n  }\r\n\r\n  addContact = (contact) => {\r\n    this.setState({\r\n      contacts: [contact, ...this.state.contacts],\r\n    });\r\n  };\r\n\r\n  valuesFilter = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  getFilter = () => {\r\n    const { filter, contacts } = this.state;\r\n    const filterValues = filter.toLowerCase();\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(filterValues)\r\n    );\r\n  };\r\n\r\n  checkName = (newName) => {\r\n    return this.state.contacts.some(\r\n      ({ name }) => name === Object.values(newName).join(\"\")\r\n    );\r\n  };\r\n\r\n  deleteContact = (contactId) => {\r\n    this.setState((prevState) => ({\r\n      contacts: prevState.contacts.filter(\r\n        (contact) => contact.id !== contactId\r\n      ),\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const filterContact = this.getFilter();\r\n    return (\r\n      <Container>\r\n        <h1 className={s.title}>Phonebook</h1>\r\n        <ContactForm onSubmit={this.addContact} contactList={this.checkName} />\r\n        <h2 className={s.title}>Contacts</h2>\r\n        <Filter value={this.state.filter} SearchContact={this.valuesFilter} />\r\n        <ContactList\r\n          contactList={filterContact}\r\n          onDelete={this.deleteContact}\r\n        />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}